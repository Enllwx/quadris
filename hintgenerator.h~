#ifndef _HINT_GENERATOR_H_
#define _HINT_GENERATOR_H_

#include "block.h"
#include "cell.h"
#include <vector>

class Grid;
class HintGenerator{
  Block block;
  Grid *theGrid;

  // The array used for DP memoisation. Basically a huge vector of cells used for
  // memoisation. Bad.
  std::vector<Cell> memoisations;

  // Helper memoisation functions: don't feel like making a 3D array so these functions
  // basically allow programmer to pretend that it's a 3D array
  Cell getMemoisation(int row, int col, int rotation);
  Cell setMemoisation(int row, int col, int rotation, Cell c);
  bool isMemoised(int row, int col, int rotation);
  
public:
  HintGenerator(Block b, Grid *g);
  
  // Returns cell, containing the best place to place the given Block b
  // Best place is defined as the row which is nearest the bottom that the Block b can get to
  Cell generateHint(Block b); // Should be private but public for testing
  Cell generateHint();        // Generates hint based on Block block (the class variable)
};

#endif
