#include "graphicsdisplay.h"
#include "window.h"
#include <iostream>
#include <sstream>

// Creates a GrpahicsDisplay for an n by n grid
GraphicsDisplay::GraphicsDisplay(int width, int height, int cellSize,
                                 int leftOffset, int topOffset,
                                 int rightOffset, int bottomOffset):
  width{width}, height{height+3},
  cellSize{cellSize},
  leftOffset{leftOffset}, topOffset{topOffset},
  rightOffset{rightOffset}, bottomOffset{bottomOffset},
  theDisplay{new Xwindow(leftOffset + width*cellSize + rightOffset,
                         topOffset + (height+3)*cellSize + bottomOffset)}
{
  //for(int row = 0; row < this->width; ++row)
    //for(int col = 0; col < this->height; ++col)
  drawCell(0, 0, 2);
  drawCell(0, this->width-1, Xwindow::Purple);
  drawCell(this->height-1, this->width-1, Xwindow::Purple);
  showInfo();
}

// Draws a cell at the given row at column with specified colour
void GraphicsDisplay::drawCell(int row, int col, int colour){
  std::cout << row << ", " << col << std::endl;
  theDisplay->fillRectangle(col * cellSize + leftOffset,
                            row * cellSize + topOffset,
                            cellSize, cellSize, colour);
}

void GraphicsDisplay::drawText(int row, int col, std::string txt){
  theDisplay->drawString(leftOffset + (width+col+1)*cellSize,
                         topOffset + cellSize*(row+1), txt);
}

void GraphicsDisplay::drawText(int row, int col, int i){
  std::stringstream ss; ss << i;
  theDisplay->drawString(leftOffset + (width+col+1)*cellSize,
                         topOffset + cellSize*(row+1), ss.str());
}

void GraphicsDisplay::showInfo(){
  drawText(0, 0, "Level:");
  drawText(1, 0, "Score:");
  drawText(2, 0, "High Score:");

  drawText(0, 4, 1);
  drawText(1, 4, 0);
  drawText(2, 4, 100);
  // theDisplay->drawString(leftOffset + (width+1)*cellSize,
  //                        topOffset + cellSize, level.str());

  // std::stringstream score;
  // score << 0;
  // theDisplay->drawString(leftOffset + (width+1)*cellSize,
  //                        topOffset + cellSize*2, score.str());

  // std::stringstream hiScore;
  // hiScore << 100;
  // theDisplay->drawString(leftOffset + (width+1)*cellSize,
  //                        topOffset + cellSize*3, hiScore.str());
  // theDisplay->drawString(leftOffset + (width+1)*cellSize, 50, score.str());
}
